# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\Exam2Image.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import os
from os import environ
from time import sleep
from main import Excute
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(771, 377)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        MainWindow.setFont(font)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setDocumentMode(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.exceprt_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.exceprt_lineEdit.setGeometry(QtCore.QRect(50, 130, 551, 31))
        self.exceprt_lineEdit.setStyleSheet("QLineEdit{\n"
"   border: 2px solid rgb(0, 170, 0);\n"
"    border-radius: 15px;\n"
"    color: rgb(0, 0, 0);\n"
"    font: italic 9pt \"Times New Roman\";\n"
"    padding-left:20px;\n"
"    padding-right:20px;\n"
"    background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QLineEdit:hover{\n"
"    border: 2px solid rgb(0, 255, 127);\n"
"}\n"
"\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(0, 170, 127);\n"
"}")
        self.exceprt_lineEdit.setObjectName("exceprt_lineEdit")
        self.apply_btn = QtWidgets.QPushButton(self.centralwidget)
        self.apply_btn.setGeometry(QtCore.QRect(630, 130, 93, 28))
        self.apply_btn.setStyleSheet("QPushButton:hover{\n"
"    border: 1px solid rgb(0, 181, 0);\n"
"    background-color: rgb(190, 254, 190)\n"
"}\n"
"\n"
"QPushButton{\n"
"    font: 70 9pt \"Times New Roman\";\n"
"    border: 1px solid rgb(0, 170, 0);\n"
"    border-radius: 6px;\n"
"    background-color: rgb(255, 255, 255)\n"
"}")
        self.apply_btn.setObjectName("apply_btn")
        self.convert_btn = QtWidgets.QPushButton(self.centralwidget)
        self.convert_btn.setGeometry(QtCore.QRect(630, 230, 93, 28))
        self.convert_btn.setStyleSheet("QPushButton:hover{\n"
"    border: 1px solid rgb(0, 181, 0);\n"
"    background-color: rgb(190, 254, 190)\n"
"}\n"
"\n"
"QPushButton{\n"
"    font: 75 9pt \"Times New Roman\";\n"
"    border: 1px solid rgb(0, 170, 0);\n"
"    border-radius: 6px;\n"
"    background-color: rgb(255, 255, 255)\n"
"}")
        self.convert_btn.setObjectName("convert_btn")
        self.browse_btn = QtWidgets.QPushButton(self.centralwidget)
        self.browse_btn.setGeometry(QtCore.QRect(630, 190, 93, 28))
        self.browse_btn.setStyleSheet("QPushButton:hover{\n"
"    border: 1px solid rgb(0, 181, 0);\n"
"    background-color: rgb(190, 254, 190)\n"
"}\n"
"\n"
"QPushButton{\n"
"    font: 75 9pt \"Times New Roman\";\n"
"    border: 1px solid rgb(0, 170, 0);\n"
"    border-radius: 6px;\n"
"    background-color: rgb(255, 255, 255)\n"
"}")
        self.browse_btn.setObjectName("browse_btn")
        self.excerpt_label = QtWidgets.QLabel(self.centralwidget)
        self.excerpt_label.setGeometry(QtCore.QRect(70, 170, 511, 20))
        self.excerpt_label.setStyleSheet("QLabel{\n"
"    font: italic 9pt Times New Roman;\n"
"    color:rgb(255, 0, 0);\n"
"}")
        self.excerpt_label.setText("")
        self.excerpt_label.setObjectName("excerpt_label")
        self.path_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.path_lineEdit.setGeometry(QtCore.QRect(50, 210, 551, 31))
        self.path_lineEdit.setStyleSheet("QLineEdit{\n"
"   border: 2px solid rgb(0, 170, 0);\n"
"    border-radius: 15px;\n"
"    color: rgb(0, 0, 0);\n"
"    font: italic 9pt \"Times New Roman\";\n"
"    padding-left:20px;\n"
"    padding-right:20px;\n"
"    background-color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QLineEdit:hover{\n"
"    border: 2px solid rgb(0, 255, 127);\n"
"}\n"
"\n"
"QLineEdit:focus{\n"
"    border: 2px solid rgb(0, 170, 127);\n"
"}")
        self.path_lineEdit.setReadOnly(True)
        self.path_lineEdit.setObjectName("path_lineEdit")
        self.notice_label = QtWidgets.QLabel(self.centralwidget)
        self.notice_label.setGeometry(QtCore.QRect(70, 250, 521, 20))
        self.notice_label.setStyleSheet("QLabel{\n"
"    font: italic 9pt Times New Roman;\n"
"    color:rgb(255, 0, 0);\n"
"}")
        self.notice_label.setText("")
        self.notice_label.setObjectName("notice_label")
        self.ThongTinUngDung = QtWidgets.QListWidget(self.centralwidget)
        self.ThongTinUngDung.setGeometry(QtCore.QRect(0, 310, 381, 41))
        self.ThongTinUngDung.setStyleSheet("QListWidget{\n"
"    background-color: rgb(191, 255, 191);\n"
"    border: 0px;\n"
"    font: 9pt \"Times New Roman\";\n"
"}")
        self.ThongTinUngDung.setObjectName("ThongTinUngDung")
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        item.setFont(font)
        self.ThongTinUngDung.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        item.setFont(font)
        self.ThongTinUngDung.addItem(item)
        self.ThongTinUngDung_2 = QtWidgets.QListWidget(self.centralwidget)
        self.ThongTinUngDung_2.setGeometry(QtCore.QRect(380, 310, 391, 41))
        self.ThongTinUngDung_2.setStyleSheet("QListWidget{\n"
"    background-color: rgb(191, 255, 191);\n"
"    border: 0px;\n"
"    font: 9pt \"Times New Roman\";\n"
"}")
        self.ThongTinUngDung_2.setModelColumn(0)
        self.ThongTinUngDung_2.setUniformItemSizes(False)
        self.ThongTinUngDung_2.setObjectName("ThongTinUngDung_2")
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        item.setFont(font)
        self.ThongTinUngDung_2.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        item.setFont(font)
        self.ThongTinUngDung_2.addItem(item)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 771, 71))
        self.frame.setStyleSheet("QFrame{\n"
"    background-color: rgb(255, 255, 255)\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(90, -10, 591, 81))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(".\\References/Banner.jpg"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.browse_btn.clicked.connect(lambda: self.BrowseBtnEvent(MainWindow))
        self.convert_btn.clicked.connect(lambda: self.StartConvert(self.path_lineEdit.text()))
        self.apply_btn.clicked.connect(lambda: self.ApplyExcerptDetect())

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow","Phần mềm chuyển đổi đề thi"))
        MainWindow.setWindowIcon(QtGui.QIcon("./References/icon.jpg"))
        self.exceprt_lineEdit.setPlaceholderText(_translate("MainWindow", "Nhận dạng đoạn trích. (Mặc định: Đoạn trích)"))
        self.apply_btn.setText(_translate("MainWindow", "Áp dụng"))
        self.convert_btn.setText(_translate("MainWindow", "Chuyển"))
        self.browse_btn.setText(_translate("MainWindow", "Tìm kiếm"))
        self.path_lineEdit.setPlaceholderText(_translate("MainWindow", "Đường dẫn file word"))
        __sortingEnabled = self.ThongTinUngDung.isSortingEnabled()
        self.ThongTinUngDung.setSortingEnabled(False)
        item = self.ThongTinUngDung.item(0)
        item.setText(_translate("MainWindow", "Website: https://cttvnu.edu.vn/"))
        item = self.ThongTinUngDung.item(1)
        item.setText(_translate("MainWindow", "Địa chỉ: Xuân Thủy, Cầu Giấy, Hà Nội"))
        self.ThongTinUngDung.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.ThongTinUngDung_2.isSortingEnabled()
        self.ThongTinUngDung_2.setSortingEnabled(False)
        item = self.ThongTinUngDung_2.item(0)
        item.setText(_translate("MainWindow", "Hotline: 0243 754 749"))
        item = self.ThongTinUngDung_2.item(1)
        item.setText(_translate("MainWindow", "Email: ctt@vnu.edu.vn"))
        self.ThongTinUngDung_2.setSortingEnabled(__sortingEnabled)

    def BrowseBtnEvent(self, MainWindow):
        options = QFileDialog.Options()
        path_docx, _ = QFileDialog.getOpenFileName(MainWindow,"QFileDialog.getOpenFileName()", "","Word Files (*.docx)", options=options)
        if path_docx:
            print(path_docx)
        else:
            path_docx = "Không tồn tại"
        self.path_lineEdit.setText(path_docx)
        return path_docx

    def StartConvert(self, path_docx):
        check_done = 0
        self.notice_label.setText("Đang trong quá trình chuyển")
        excerpt_detect = self.ApplyExcerptDetect()
        check_done, path_images_exam, error, detail = Excute(path_docx=path_docx, excerpt_detect= excerpt_detect)
        while(True):
            # print(check_done)
            if(check_done == 1):
                self.notice_label.setText("Đã hoàn thành")
                self.FinishConvertNotification(path_images_exam= path_images_exam)
                break
            elif(check_done == -1 ):
                self.notice_label.setText("")
                self.ErrorNotification(error=error, detail= detail)
                break
            else:
                continue

    def ApplyExcerptDetect(self):
        check_detect = self.exceprt_lineEdit.text()
        if(check_detect == ""):
                self.exceprt_lineEdit.setText("Đoạn trích")
                self.excerpt_label.setText("Mặc định được đặt là Đoạn trích")
                check_detect = "Đoạn trích"
        else:
                self.excerpt_label.setText(check_detect)

        return check_detect

    def FinishConvertNotification(self,path_images_exam):
        msg = QMessageBox(MainWindow)
        msg.setWindowTitle("Hoàn thành")
        msg.setText("Đề thi đã chuyển xong hiện đang ở thư mục:\n" + path_images_exam + "\n\nBạn có muốn mở ?" )
        msg.setIcon(QMessageBox.Question)
        msg.setStandardButtons(QMessageBox.Yes|QMessageBox.No)
        msg.setDefaultButton(QMessageBox.Yes)
        
        x = msg.exec_()
        yes_or_no=msg.standardButton(msg.clickedButton())
        if(yes_or_no == QMessageBox.Yes):
            os.startfile(path_images_exam)
    
    def ErrorNotification(self,error, detail):
        msg = QMessageBox(MainWindow)
        msg.setWindowTitle("Đã có lỗi")
        msg.setText("Xin hãy kiểm tra lại: \n" + "\""+ detail+"\"")
        msg.setIcon(QMessageBox.Critical)
        msg.setStandardButtons(QMessageBox.Ok)
        msg.setDefaultButton(QMessageBox.Ok)
        msg.setDetailedText(error)
        
        x = msg.exec_()

def suppress_qt_warnings():
    environ["QT_DEVICE_PIXEL_RATIO"] = "0"
    environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
    environ["QT_SCREEN_SCALE_FACTORS"] = "1"
    environ["QT_SCALE_FACTOR"] = "1"

if __name__ == "__main__":
    suppress_qt_warnings()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
